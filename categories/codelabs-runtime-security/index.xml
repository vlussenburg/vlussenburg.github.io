<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>codelabs runtime security on Codelabs | Examples | Tutorials</title>
    <link>https://vlussenburg.github.io/categories/codelabs-runtime-security/</link>
    <description>Recent content in codelabs runtime security on Codelabs | Examples | Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Jan 2020 10:51:47 +0530</lastBuildDate>
    
	<atom:link href="https://vlussenburg.github.io/categories/codelabs-runtime-security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Threat Intelligence</title>
      <link>https://vlussenburg.github.io/codelab/runtime-codelab-threat-intelligence/</link>
      <pubDate>Thu, 02 Jan 2020 10:51:47 +0530</pubDate>
      
      <guid>https://vlussenburg.github.io/codelab/runtime-codelab-threat-intelligence/</guid>
      <description>In this tutorial we will learn about Alcide Threat Intelligence Engine. Alcide Threat Intelligence Engine is a module in Alcide Runtime Security (ART) that monitors your Kubernetes clusters&amp;rsquo; and autonomously detects and alerts about suspicious communication in runtime, based on traffic to/from IP &amp;amp; DNS with bad reputation. Alcide provides out-of-the-box Threat Detection engine equipped with canned analytics and alerts set. Alerts are detected in real-time, allowing Security and DevOps teams to quickly respond and mitigate potential threats.</description>
    </item>
    
    <item>
      <title>Workload Segmentation</title>
      <link>https://vlussenburg.github.io/codelab/runtime-codelab-embedded-policies-star-demo/</link>
      <pubDate>Fri, 01 Nov 2019 10:51:47 +0530</pubDate>
      
      <guid>https://vlussenburg.github.io/codelab/runtime-codelab-embedded-policies-star-demo/</guid>
      <description>In this tutorial we will learn about Alcide Embedded Firewall Policies, which are part of Alcide Runtime Security (ART). We will see how Alcide Embedded Firewall Policies work in a real world scenario.
 Note: Using Alcide Runtime Security requires to Sign up to Alcide Platform for a time limited trial.
 Start Codelab

Star</description>
    </item>
    
    <item>
      <title>Cloud Firewall Policies</title>
      <link>https://vlussenburg.github.io/codelab/runtime-codelab-cloud-policies/</link>
      <pubDate>Wed, 11 Sep 2019 10:51:47 +0530</pubDate>
      
      <guid>https://vlussenburg.github.io/codelab/runtime-codelab-cloud-policies/</guid>
      <description>In this tutorial we will learn about Alcide Cloud Firewall Policies, which are part of Alcide Runtime Security (ART). We will see how Security and/or Opertion teams can create and manage firewall policy. The policies are effectively application aware Pod segmentation policies to support use cases that are not available as part of Kubernetes native network policies. For example, network policy that limit Pod access to cluster external database provided as a domain name, limit Pod access to 3rd party services such as Slack, address PCI DSS compliance needs, and more.</description>
    </item>
    
    <item>
      <title>Microservice Firewall</title>
      <link>https://vlussenburg.github.io/codelab/runtime-codelab-embedded-policies/</link>
      <pubDate>Wed, 11 Sep 2019 10:51:47 +0530</pubDate>
      
      <guid>https://vlussenburg.github.io/codelab/runtime-codelab-embedded-policies/</guid>
      <description>In this tutorial we will learn about Alcide Embedded Firewall Policies, which are part of Alcide Runtime Security (ART). We will see how Developers and/or DevOps can implement firewall policy-as-code. The policies are effectively application aware Pod segmentation policies to support use cases that are not available as part of Kubernetes native network policies. For example, network policy that limit Pod access to cluster external database provided as a domain name, limit Pod access to 3rd party services such as Slack, address PCI DSS compliance needs, and more.</description>
    </item>
    
  </channel>
</rss>